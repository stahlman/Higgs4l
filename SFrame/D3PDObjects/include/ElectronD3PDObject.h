// Dear emacs, this is -*- c++ -*-
// -------------------------------------------------------------
//             Code produced by D3PDMakerReader
//
//  author: Attila Krasznahorkay <Attila.Krasznahorkay@cern.ch>
// -------------------------------------------------------------
#ifndef D3PDREADER_ElectronD3PDObject_H
#define D3PDREADER_ElectronD3PDObject_H

#include <map>
#include <vector>
using std::vector;

#include <TObject.h>
#include <TString.h>

#include "D3PDObjectBase.h"
#include "D3PDReadStats.h"
#include "VarHandle.h"
#include "VarProxy.h"

class TTree;

namespace D3PDReader {

   // Forward declaration(s):
   class ElectronD3PDObject;

   /**
    * Code generated by CodeGenerator_v2 on:
    *  host = pc-penn-d-01
    *  OS   = Linux / 2.6.18-308.8.2.el5
    *  user = stahlman
    *  time = Fri Jun 29 14:28:44 2012
    */
   class ElectronD3PDObjectElement : public TObject {

      friend class ElectronD3PDObject;

   protected:
      /// Constructor only visible to ElectronD3PDObject
      ElectronD3PDObjectElement( size_t index, const ElectronD3PDObject& parent );

   public:
      /// Copy constructor
      ElectronD3PDObjectElement( const ElectronD3PDObjectElement& parent );

      /// Parent object of this proxy object
      const ElectronD3PDObject* GetParent() const;
      /// Index of the object inside its container
      size_t GetIndex() const;

      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_CaloPointing_eta] 
      VarProxy< float > CaloPointing_eta;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_CaloPointing_sigma_eta] 
      VarProxy< float > CaloPointing_sigma_eta;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_CaloPointing_sigma_zvertex] 
      VarProxy< float > CaloPointing_sigma_zvertex;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_CaloPointing_zvertex] 
      VarProxy< float > CaloPointing_zvertex;
      VarProxy< float > E;
      /// [detail 15]
      VarProxy< float > E233;
      /// [detail 18]
      VarProxy< float > E237;
      /// [detail 19]
      VarProxy< float > E277;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_ED_Njets] 
      VarProxy< float > ED_Njets;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_ED_median] 
      VarProxy< float > ED_median;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_ED_sigma] 
      VarProxy< float > ED_sigma;
      /// DeltaR between the offline and trigger objects.
      VarProxy< float > EF_dr;
      /// Index in trig_EF_el_
      VarProxy< int > EF_index;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_ES0_real] 
      VarProxy< float > ES0_real;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_ES1_real] 
      VarProxy< float > ES1_real;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_ES2_real] 
      VarProxy< float > ES2_real;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_ES3_real] 
      VarProxy< float > ES3_real;
      VarProxy< float > E_EMB1;
      VarProxy< float > E_EMB2;
      VarProxy< float > E_EMB3;
      VarProxy< float > E_EME1;
      VarProxy< float > E_EME2;
      VarProxy< float > E_EME3;
      VarProxy< float > E_FCAL0;
      VarProxy< float > E_FCAL1;
      VarProxy< float > E_FCAL2;
      VarProxy< float > E_HEC0;
      VarProxy< float > E_HEC1;
      VarProxy< float > E_HEC2;
      VarProxy< float > E_HEC3;
      VarProxy< float > E_PreSamplerB;
      VarProxy< float > E_PreSamplerE;
      VarProxy< float > E_TileBar0;
      VarProxy< float > E_TileBar1;
      VarProxy< float > E_TileBar2;
      VarProxy< float > E_TileExt0;
      VarProxy< float > E_TileExt1;
      VarProxy< float > E_TileExt2;
      VarProxy< float > E_TileGap1;
      VarProxy< float > E_TileGap2;
      VarProxy< float > E_TileGap3;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_EcellS0] 
      VarProxy< float > EcellS0;
      /// [detail 27]
      VarProxy< float > Emax2;
      /// [detail 38]
      VarProxy< float > Emins1;
      VarProxy< float > Es0;
      VarProxy< float > Es1;
      VarProxy< float > Es2;
      VarProxy< float > Es3;
      VarProxy< float > Et;
      /// [detail 285]
      VarProxy< float > Etcone15;
      /// [detail 299]pt-corrected isolation energy within DR=0.15 cone
      VarProxy< float > Etcone15_pt_corrected;
      /// [detail 1]
      VarProxy< float > Etcone20;
      /// [detail 300]pt-corrected isolation energy within DR=0.20 cone
      VarProxy< float > Etcone20_pt_corrected;
      /// [detail 286]
      VarProxy< float > Etcone25;
      /// [detail 301]pt-corrected isolation energy within DR=0.25 cone
      VarProxy< float > Etcone25_pt_corrected;
      /// [detail 2]
      VarProxy< float > Etcone30;
      /// [detail 302]pt-corrected isolation energy within DR=0.30 cone
      VarProxy< float > Etcone30_pt_corrected;
      /// [detail 287]
      VarProxy< float > Etcone35;
      /// [detail 303]pt-corrected isolation energy within DR=0.35 cone
      VarProxy< float > Etcone35_pt_corrected;
      /// [detail 3]
      VarProxy< float > Etcone40;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_Etcone40_ED_corrected] 
      VarProxy< float > Etcone40_ED_corrected;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_Etcone40_corrected] 
      VarProxy< float > Etcone40_corrected;
      /// [detail 304]pt-corrected isolation energy within DR=0.40 cone
      VarProxy< float > Etcone40_pt_corrected;
      /// [detail 0]
      VarProxy< float > Etcone45;
      /// [detail 9]
      VarProxy< float > Ethad;
      /// [detail 8]
      VarProxy< float > Ethad1;
      /// [detail 170]
      VarProxy< float > EtringnoisedR03sig2;
      /// [detail 171]
      VarProxy< float > EtringnoisedR03sig3;
      /// [detail 172]
      VarProxy< float > EtringnoisedR03sig4;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_HPV_eta] 
      VarProxy< float > HPV_eta;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_HPV_sigma_eta] 
      VarProxy< float > HPV_sigma_eta;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_HPV_sigma_zvertex] 
      VarProxy< float > HPV_sigma_zvertex;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_HPV_zvertex] 
      VarProxy< float > HPV_zvertex;
      VarProxy< double > Hmatrix;
      VarProxy< double > Hmatrix5;
      VarProxy< unsigned int > OQ;
      VarProxy< float > Rconv;
      VarProxy< float > TRTHighTHitsRatio;
      VarProxy< float > TRTHighTOutliersRatio;
      VarProxy< float > Unrefittedtrack_d0;
      VarProxy< float > Unrefittedtrack_eta;
      VarProxy< float > Unrefittedtrack_phi;
      VarProxy< float > Unrefittedtrack_pt;
      VarProxy< float > Unrefittedtrack_qoverp;
      VarProxy< float > Unrefittedtrack_theta;
      VarProxy< float > Unrefittedtrack_z0;
      VarProxy< double > adaboost;
      VarProxy< int > author;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_calibHitsShowerDepth] Shower depth as defined by the calib hits cluster correction
      VarProxy< float > calibHitsShowerDepth;
      VarProxy< float > cellmaxfrac;
      VarProxy< float > centerlambda;
      VarProxy< float > charge;
      VarProxy< float > cl_E;
      VarProxy< float > cl_eta;
      VarProxy< float > cl_phi;
      VarProxy< float > cl_pt;
      /// Number of tracks for the first conversion candidate; 0 if no conversion or if there are more than two tracks.
      VarProxy< int > convFlag;
      /// [detail 72]
      VarProxy< float > convanglematch;
      /// [detail 71]
      VarProxy< float > convtrackmatch;
      VarProxy< int > convtrk1nBLHits;
      VarProxy< int > convtrk1nPixHits;
      VarProxy< int > convtrk1nSCTHits;
      VarProxy< int > convtrk1nTRTHits;
      VarProxy< int > convtrk2nBLHits;
      VarProxy< int > convtrk2nPixHits;
      VarProxy< int > convtrk2nSCTHits;
      VarProxy< int > convtrk2nTRTHits;
      VarProxy< float > convvtxchi2;
      VarProxy< float > convvtxx;
      VarProxy< float > convvtxy;
      VarProxy< float > convvtxz;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_deltaEmax2] 
      VarProxy< float > deltaEmax2;
      VarProxy< float > deltaEs;
      /// [detail 305]Difference between the cluster phi (sampling 2) and the eta of the track extrapolated from the last measurement
      VarProxy< float > deltaPhiFromLast;
      /// [detail 284]Difference between the track phi at perigee and the phi at which the track crosses the calorimeter
      VarProxy< float > deltaPhiRot;
      /// [detail 45]
      VarProxy< float > deltaeta1;
      /// [detail 46]
      VarProxy< float > deltaeta2;
      /// [detail 50]
      VarProxy< float > deltaphi2;
      /// [detail 247]
      VarProxy< float > deltaphiRescaled;
      /// [detail 76]
      VarProxy< float > depth;
      /// TrackSummary::getPID(eProbabilityBrem)
      VarProxy< float > eProbabilityBrem;
      /// TrackSummary::getPID(eProbabilityComb)
      VarProxy< float > eProbabilityComb;
      /// TrackSummary::getPID(eProbabilityHT)
      VarProxy< float > eProbabilityHT;
      /// TrackSummary::getPID(eProbabilityToT)
      VarProxy< float > eProbabilityToT;
      VarProxy< double > electronbgweight;
      VarProxy< double > electronweight;
      /// [detail 39]
      VarProxy< float > emaxs1;
      /// [detail 74]
      VarProxy< float > errz;
      VarProxy< float > eta;
      /// [detail 248]Eta position at sampling 1 for track extrapolated from the last hit.
      VarProxy< float > etaSampling1;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_etacellS0] 
      VarProxy< float > etacellS0;
      /// [detail 42]
      VarProxy< float > etacorrmag;
      /// [detail 75]
      VarProxy< float > etap;
      VarProxy< float > etas0;
      VarProxy< float > etas1;
      VarProxy< float > etas2;
      VarProxy< float > etas3;
      VarProxy< int > expectBLayerHit;
      /// [detail 288]Do we expect to see a hit from this track in the B pixel layer?
      VarProxy< float > expectHitInBLayer;
      /// [detail 11]
      VarProxy< float > f1;
      /// [detail 13]
      VarProxy< float > f1core;
      /// [detail 12]
      VarProxy< float > f3;
      /// [detail 14]
      VarProxy< float > f3core;
      VarProxy< float > firstEdens;
      /// [detail 28]
      VarProxy< float > fside;
      VarProxy< int > goodOQ;
      VarProxy< int > hasconv;
      VarProxy< int > hastrack;
      /// True if the first conversion candidate has 1 or 2 tracks.
      VarProxy< int > isConv;
      /// IsEM mask --- bits are set for each cut that FAILS.
      VarProxy< unsigned int > isEM;
      /// Loose IsEM mask --- bits are set for each cut that FAILS.
      VarProxy< unsigned int > isEMLoose;
      /// Medium IsEM mask --- bits are set for each cut that FAILS.
      VarProxy< unsigned int > isEMMedium;
      /// Tight IsEM mask --- bits are set for each cut that FAILS.
      VarProxy< unsigned int > isEMTight;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_isIso] Mask of isolation cuts that this object fails.  Bits are defined in egammaInterfaces/egammaIsolationMVATopToolsDefs.h or, from python, in ROOT.egammaIsolationType (in egammaInterfacesEnumsDict).
      VarProxy< unsigned int > isIso;
      VarProxy< double > isolationlikelihoodhqelectrons;
      VarProxy< double > isolationlikelihoodjets;
      VarProxy< float > jet_E;
      VarProxy< float > jet_dr;
      VarProxy< float > jet_eta;
      VarProxy< float > jet_m;
      VarProxy< int > jet_matched;
      VarProxy< float > jet_phi;
      VarProxy< float > jet_pt;
      VarProxy< float > jet_truth_E;
      VarProxy< float > jet_truth_dr;
      VarProxy< float > jet_truth_eta;
      VarProxy< float > jet_truth_m;
      VarProxy< int > jet_truth_matched;
      VarProxy< float > jet_truth_phi;
      VarProxy< float > jet_truth_pt;
      VarProxy< float > lateral;
      VarProxy< std::vector<float,std::allocator<float> > > likelihoodsPixeldEdx;
      VarProxy< float > longitudinal;
      VarProxy< int > loose;
      VarProxy< int > looseIso;
      VarProxy< int > loosePP;
      VarProxy< int > loosePPIso;
      VarProxy< float > m;
      VarProxy< float > massPixeldEdx;
      VarProxy< int > medium;
      VarProxy< int > mediumIso;
      VarProxy< int > mediumIsoWithoutTrack;
      VarProxy< int > mediumPP;
      VarProxy< int > mediumPPIso;
      VarProxy< int > mediumWithoutTrack;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_mvaptcone20] Sum of track transverse momenta within a cone of radius 0.2, as calculated by the egammaIsolationMVATopTool.
      VarProxy< float > mvaptcone20;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_mvaptcone30] Sum of track transverse momenta within a cone of radius 0.3, as calculated by the egammaIsolationMVATopTool.
      VarProxy< float > mvaptcone30;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_mvaptcone40] Sum of track transverse momenta within a cone of radius 0.4, as calculated by the egammaIsolationMVATopTool.
      VarProxy< float > mvaptcone40;
      VarProxy< int > nBLHits;
      VarProxy< int > nBLSharedHits;
      VarProxy< int > nBLayerOutliers;
      VarProxy< int > nBLayerSplitHits;
      VarProxy< int > nContribPixelLayers;
      /// Number of conversion vertices.
      VarProxy< int > nConv;
      /// Number of conversion vertices with exactly two tracks.
      VarProxy< int > nDoubleTrackConv;
      VarProxy< int > nGangedFlaggedFakes;
      VarProxy< int > nGangedPixels;
      VarProxy< int > nGoodHitsPixeldEdx;
      VarProxy< int > nPixHits;
      VarProxy< int > nPixHoles;
      VarProxy< int > nPixSharedHits;
      VarProxy< int > nPixSplitHits;
      VarProxy< int > nPixelDeadSensors;
      VarProxy< int > nPixelOutliers;
      VarProxy< int > nPixelSpoiltHits;
      VarProxy< int > nSCTDeadSensors;
      VarProxy< int > nSCTDoubleHoles;
      VarProxy< int > nSCTHits;
      VarProxy< int > nSCTHoles;
      VarProxy< int > nSCTOutliers;
      VarProxy< int > nSCTSharedHits;
      VarProxy< int > nSCTSpoiltHits;
      VarProxy< int > nSiHits;
      /// Number of conversion vertices with exactly one track.
      VarProxy< int > nSingleTrackConv;
      VarProxy< int > nTRTHighTHits;
      VarProxy< int > nTRTHighTOutliers;
      VarProxy< int > nTRTHits;
      VarProxy< int > nTRTHoles;
      VarProxy< int > nTRTOutliers;
      VarProxy< double > neuralnet;
      /// [detail 295]
      VarProxy< float > nucone20;
      /// [detail 296]
      VarProxy< float > nucone30;
      /// [detail 297]
      VarProxy< float > nucone40;
      /// MC particle origin, from classifier tool.
      VarProxy< int > origin;
      /// Origin of photon for background electron from conversions, from classifier tool.
      VarProxy< int > originbkg;
      VarProxy< float > phi;
      VarProxy< float > phis0;
      VarProxy< float > phis1;
      VarProxy< float > phis2;
      VarProxy< float > phis3;
      VarProxy< float > pixeldEdx;
      /// [detail 35]
      VarProxy< float > pos7;
      VarProxy< float > pt;
      VarProxy< float > pt1conv;
      VarProxy< float > pt2conv;
      /// [detail 293]
      VarProxy< float > ptcone20;
      /// [detail 241]
      VarProxy< float > ptcone30;
      /// [detail 294]
      VarProxy< float > ptcone40;
      VarProxy< float > ptconv;
      VarProxy< float > px;
      VarProxy< float > py;
      VarProxy< float > pz;
      VarProxy< float > pzconv;
      VarProxy< float > rawcl_E;
      VarProxy< float > rawcl_Es0;
      VarProxy< float > rawcl_Es1;
      VarProxy< float > rawcl_Es2;
      VarProxy< float > rawcl_Es3;
      VarProxy< float > rawcl_eta;
      VarProxy< float > rawcl_etas0;
      VarProxy< float > rawcl_etas1;
      VarProxy< float > rawcl_etas2;
      VarProxy< float > rawcl_etas3;
      VarProxy< float > rawcl_phi;
      VarProxy< float > rawcl_phis0;
      VarProxy< float > rawcl_phis1;
      VarProxy< float > rawcl_phis2;
      VarProxy< float > rawcl_phis3;
      VarProxy< float > rawcl_pt;
     VarProxy< double > cl_etaCalo;
     VarProxy< double > cl_phiCalo;
      /// [detail 103]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_LMqoverp;
      /// [detail 108]
      VarProxy< std::vector<int,std::allocator<int> > > refittedTrack_author;
      /// [detail 68]
      VarProxy< std::vector<int,std::allocator<int> > > refittedTrack_bremFitStatus;
      /// [detail 61]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_bremRadius;
      /// [detail 67]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_bremRadiusErr;
      /// [detail 105]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_bremZ;
      /// [detail 106]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_bremZErr;
      /// [detail 70]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_chi2;
      /// [detail 84]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_covd0;
      /// [detail 86]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_covd0phi;
      /// [detail 88]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_covd0qoverp;
      /// [detail 87]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_covd0theta;
      /// [detail 85]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_covd0z0;
      /// [detail 93]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_covphi;
      /// [detail 95]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_covphiqoverp;
      /// [detail 94]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_covphitheta;
      /// [detail 98]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_covqoverp;
      /// [detail 96]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_covtheta;
      /// [detail 97]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_covthetaqoverp;
      /// [detail 89]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_covz0;
      /// [detail 90]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_covz0phi;
      /// [detail 92]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_covz0qoverp;
      /// [detail 91]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_covz0theta;
      /// [detail 79]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_d0;
      /// [detail 104]
      VarProxy< std::vector<int,std::allocator<int> > > refittedTrack_hasBrem;
      /// Number of ntuple rows.
      VarProxy< int > refittedTrack_n;
      /// [detail 80]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_phi;
      /// [detail 81]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_qoverp;
      /// [detail 83]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_theta;
      /// [detail 82]
      VarProxy< std::vector<float,std::allocator<float> > > refittedTrack_z0;
      VarProxy< float > reta;
      VarProxy< double > ringernn;
      VarProxy< std::vector<float,std::allocator<float> > > rings_E;
      VarProxy< float > rphi;
      /// [detail 40]
      VarProxy< float > rphiallcalo;
      VarProxy< float > secondR;
      VarProxy< float > secondlambda;
      VarProxy< double > softebgweight;
      VarProxy< double > softeneuralnet;
      VarProxy< double > softeweight;
      VarProxy< int > tight;
      VarProxy< int > tightIso;
      VarProxy< int > tightIsoWithoutTrack;
      VarProxy< int > tightPP;
      VarProxy< int > tightPPIso;
      VarProxy< int > tightWithoutTrack;
      /// [detail 306]
      VarProxy< float > topoEtcone20;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_topoEtcone20_corrected] 
      VarProxy< float > topoEtcone20_corrected;
      /// [detail 307]
      VarProxy< float > topoEtcone30;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_topoEtcone30_corrected] 
      VarProxy< float > topoEtcone30_corrected;
      /// [detail 308]
      VarProxy< float > topoEtcone40;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_topoEtcone40_corrected] 
      VarProxy< float > topoEtcone40_corrected;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_topoEtcone60] 
      VarProxy< float > topoEtcone60;
      VarProxy< float > trackIPEstimate_d0_biasedpvunbiased;
      VarProxy< float > trackIPEstimate_d0_unbiasedpvunbiased;
      VarProxy< float > trackIPEstimate_sigd0_biasedpvunbiased;
      VarProxy< float > trackIPEstimate_sigd0_unbiasedpvunbiased;
      VarProxy< float > trackIPEstimate_sigz0_biasedpvunbiased;
      VarProxy< float > trackIPEstimate_sigz0_unbiasedpvunbiased;
      VarProxy< float > trackIPEstimate_z0_biasedpvunbiased;
      VarProxy< float > trackIPEstimate_z0_unbiasedpvunbiased;
      VarProxy< float > trackcov_d0;
      VarProxy< float > trackcov_d0_phi;
      VarProxy< float > trackcov_d0_qoverp;
      VarProxy< float > trackcov_d0_theta;
      VarProxy< float > trackcov_d0_z0;
      VarProxy< float > trackcov_phi;
      VarProxy< float > trackcov_phi_qoverp;
      VarProxy< float > trackcov_phi_theta;
      VarProxy< float > trackcov_qoverp;
      VarProxy< float > trackcov_theta;
      VarProxy< float > trackcov_theta_qoverp;
      VarProxy< float > trackcov_z0;
      VarProxy< float > trackcov_z0_phi;
      VarProxy< float > trackcov_z0_qoverp;
      VarProxy< float > trackcov_z0_theta;
      VarProxy< float > trackd0;
      /// [detail 274]Transverse impact parameter with respect to the beam spot.
      VarProxy< float > trackd0_physics;
      VarProxy< float > trackd0beam;
      VarProxy< float > trackd0pv;
      VarProxy< float > trackd0pvunbiased;
      VarProxy< float > tracketa;
      VarProxy< float > trackfitchi2;
      VarProxy< int > trackfitndof;
      VarProxy< float > trackphi;
      VarProxy< float > trackpt;
      VarProxy< float > trackqoverp;
      /// Uncertainty on transverse impact parameter.
      VarProxy< float > tracksigd0beam;
      /// Uncertainty on transverse impact parameter.
      VarProxy< float > tracksigd0pv;
      VarProxy< float > tracksigd0pvunbiased;
      /// Uncertainty on longitudinal impact parameter.
      VarProxy< float > tracksigz0beam;
      /// Uncertainty on longitudinal impact parameter.
      VarProxy< float > tracksigz0pv;
      VarProxy< float > tracksigz0pvunbiased;
      VarProxy< float > tracktheta;
      VarProxy< float > trackz0;
      VarProxy< float > trackz0beam;
      VarProxy< float > trackz0pv;
      VarProxy< float > trackz0pvunbiased;
      VarProxy< float > truth_E;
      VarProxy< int > truth_barcode;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_truth_bremLoc] 
      VarProxy< float > truth_bremLoc;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_truth_bremSi] 
      VarProxy< float > truth_bremSi;
      VarProxy< float > truth_eta;
      VarProxy< int > truth_hasHardBrem;
      /// Index in mc_
      VarProxy< int > truth_index;
      VarProxy< int > truth_matched;
      VarProxy< int > truth_motherbarcode;
      VarProxy< int > truth_mothertype;
      VarProxy< float > truth_phi;
      VarProxy< float > truth_pt;
      VarProxy< int > truth_status;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_truth_sumbrem] 
      VarProxy< float > truth_sumbrem;
      VarProxy< int > truth_type;
      /// MC particle type, from classifier tool.
      VarProxy< int > type;
      /// Type of photon for background electron from conversions, from classifier tool
      VarProxy< int > typebkg;
      VarProxy< float > vertweight;
      VarProxy< float > vertx;
      VarProxy< float > verty;
      VarProxy< float > vertz;
      /// [detail 25]
      VarProxy< float > weta2;
      /// [detail 24]
      VarProxy< float > ws3;
      /// [detail 37]
      VarProxy< float > wstot;
      VarProxy< float > zconv;
      /// [detail 73]
      VarProxy< float > zvertex;

   private:
      /// Reference to the parent of this object
      const ElectronD3PDObject* fParent;
      /// The index of this object inside the parent container
      size_t fIndex;

      ClassDef( ElectronD3PDObjectElement, 0 )

   }; // class ElectronD3PDObjectElement

   /**
    * Code generated by CodeGenerator_v2 on:
    *  host = pc-penn-d-01
    *  OS   = Linux / 2.6.18-308.8.2.el5
    *  user = stahlman
    *  time = Fri Jun 29 14:28:44 2012
    */
   class ElectronD3PDObject : public D3PDObjectBase {

   public:
      /// Constructor used when reading from a TTree
      ElectronD3PDObject( const ::Long64_t& master, const char* prefix = "el_" );
      /// Constructor when the object is only used for writing data out
      ElectronD3PDObject( const char* prefix = "el_" );
      /// Destructor
      ~ElectronD3PDObject();

      /// Get the currently configured prefix value
      virtual const char* GetPrefix() const;
      /// Set the prefix for the variables
      virtual void SetPrefix( const char* prefix );

      /// Connect the object to an input TTree
      virtual void ReadFrom( ::TTree* tree );
      /// Connect the object to an output TTree
      virtual void WriteTo( ::TTree* tree );

      /// Turn (selected) branches either on or off
      virtual void SetActive( ::Bool_t active = kTRUE,
                              const ::TString& pattern = ".*" );
      /// Read in all the variables that we need to write out as well
      virtual void ReadAllActive();

      /// Get the D3PD reading statistics
      virtual D3PDReadStats GetStatistics() const;

      /// Set the contents of the object according to another object
      ElectronD3PDObject& Set( const ElectronD3PDObject& parent );

      /// Clear the container. Useful when writing new branches.
      void Clear( Option_t* option = "" );
      /// Add one element to an output collection
      ElectronD3PDObject& Add( const ElectronD3PDObjectElement& el );

      /// Access a proxy class describing one element of the container
      ElectronD3PDObjectElement& operator[]( size_t index );
      /// Access a proxy class describing one element of the container (constant version)
      const ElectronD3PDObjectElement& operator[]( size_t index ) const;
      /// Add one element to an output collection
      ElectronD3PDObject& operator+=( const ElectronD3PDObjectElement& el );

      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_CaloPointing_eta] 
      VarHandle< std::vector<float,std::allocator<float> >* > CaloPointing_eta;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_CaloPointing_sigma_eta] 
      VarHandle< std::vector<float,std::allocator<float> >* > CaloPointing_sigma_eta;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_CaloPointing_sigma_zvertex] 
      VarHandle< std::vector<float,std::allocator<float> >* > CaloPointing_sigma_zvertex;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_CaloPointing_zvertex] 
      VarHandle< std::vector<float,std::allocator<float> >* > CaloPointing_zvertex;
      VarHandle< std::vector<float,std::allocator<float> >* > E;
      /// [detail 15]
      VarHandle< std::vector<float,std::allocator<float> >* > E233;
      /// [detail 18]
      VarHandle< std::vector<float,std::allocator<float> >* > E237;
      /// [detail 19]
      VarHandle< std::vector<float,std::allocator<float> >* > E277;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_ED_Njets] 
      VarHandle< std::vector<float,std::allocator<float> >* > ED_Njets;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_ED_median] 
      VarHandle< std::vector<float,std::allocator<float> >* > ED_median;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_ED_sigma] 
      VarHandle< std::vector<float,std::allocator<float> >* > ED_sigma;
      /// DeltaR between the offline and trigger objects.
      VarHandle< std::vector<float,std::allocator<float> >* > EF_dr;
      /// Index in trig_EF_el_
      VarHandle< std::vector<int,std::allocator<int> >* > EF_index;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_ES0_real] 
      VarHandle< std::vector<float,std::allocator<float> >* > ES0_real;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_ES1_real] 
      VarHandle< std::vector<float,std::allocator<float> >* > ES1_real;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_ES2_real] 
      VarHandle< std::vector<float,std::allocator<float> >* > ES2_real;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_ES3_real] 
      VarHandle< std::vector<float,std::allocator<float> >* > ES3_real;
      VarHandle< std::vector<float,std::allocator<float> >* > E_EMB1;
      VarHandle< std::vector<float,std::allocator<float> >* > E_EMB2;
      VarHandle< std::vector<float,std::allocator<float> >* > E_EMB3;
      VarHandle< std::vector<float,std::allocator<float> >* > E_EME1;
      VarHandle< std::vector<float,std::allocator<float> >* > E_EME2;
      VarHandle< std::vector<float,std::allocator<float> >* > E_EME3;
      VarHandle< std::vector<float,std::allocator<float> >* > E_FCAL0;
      VarHandle< std::vector<float,std::allocator<float> >* > E_FCAL1;
      VarHandle< std::vector<float,std::allocator<float> >* > E_FCAL2;
      VarHandle< std::vector<float,std::allocator<float> >* > E_HEC0;
      VarHandle< std::vector<float,std::allocator<float> >* > E_HEC1;
      VarHandle< std::vector<float,std::allocator<float> >* > E_HEC2;
      VarHandle< std::vector<float,std::allocator<float> >* > E_HEC3;
      VarHandle< std::vector<float,std::allocator<float> >* > E_PreSamplerB;
      VarHandle< std::vector<float,std::allocator<float> >* > E_PreSamplerE;
      VarHandle< std::vector<float,std::allocator<float> >* > E_TileBar0;
      VarHandle< std::vector<float,std::allocator<float> >* > E_TileBar1;
      VarHandle< std::vector<float,std::allocator<float> >* > E_TileBar2;
      VarHandle< std::vector<float,std::allocator<float> >* > E_TileExt0;
      VarHandle< std::vector<float,std::allocator<float> >* > E_TileExt1;
      VarHandle< std::vector<float,std::allocator<float> >* > E_TileExt2;
      VarHandle< std::vector<float,std::allocator<float> >* > E_TileGap1;
      VarHandle< std::vector<float,std::allocator<float> >* > E_TileGap2;
      VarHandle< std::vector<float,std::allocator<float> >* > E_TileGap3;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_EcellS0] 
      VarHandle< std::vector<float,std::allocator<float> >* > EcellS0;
      /// [detail 27]
      VarHandle< std::vector<float,std::allocator<float> >* > Emax2;
      /// [detail 38]
      VarHandle< std::vector<float,std::allocator<float> >* > Emins1;
      VarHandle< std::vector<float,std::allocator<float> >* > Es0;
      VarHandle< std::vector<float,std::allocator<float> >* > Es1;
      VarHandle< std::vector<float,std::allocator<float> >* > Es2;
      VarHandle< std::vector<float,std::allocator<float> >* > Es3;
      VarHandle< std::vector<float,std::allocator<float> >* > Et;
      /// [detail 285]
      VarHandle< std::vector<float,std::allocator<float> >* > Etcone15;
      /// [detail 299]pt-corrected isolation energy within DR=0.15 cone
      VarHandle< std::vector<float,std::allocator<float> >* > Etcone15_pt_corrected;
      /// [detail 1]
      VarHandle< std::vector<float,std::allocator<float> >* > Etcone20;
      /// [detail 300]pt-corrected isolation energy within DR=0.20 cone
      VarHandle< std::vector<float,std::allocator<float> >* > Etcone20_pt_corrected;
      /// [detail 286]
      VarHandle< std::vector<float,std::allocator<float> >* > Etcone25;
      /// [detail 301]pt-corrected isolation energy within DR=0.25 cone
      VarHandle< std::vector<float,std::allocator<float> >* > Etcone25_pt_corrected;
      /// [detail 2]
      VarHandle< std::vector<float,std::allocator<float> >* > Etcone30;
      /// [detail 302]pt-corrected isolation energy within DR=0.30 cone
      VarHandle< std::vector<float,std::allocator<float> >* > Etcone30_pt_corrected;
      /// [detail 287]
      VarHandle< std::vector<float,std::allocator<float> >* > Etcone35;
      /// [detail 303]pt-corrected isolation energy within DR=0.35 cone
      VarHandle< std::vector<float,std::allocator<float> >* > Etcone35_pt_corrected;
      /// [detail 3]
      VarHandle< std::vector<float,std::allocator<float> >* > Etcone40;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_Etcone40_ED_corrected] 
      VarHandle< std::vector<float,std::allocator<float> >* > Etcone40_ED_corrected;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_Etcone40_corrected] 
      VarHandle< std::vector<float,std::allocator<float> >* > Etcone40_corrected;
      /// [detail 304]pt-corrected isolation energy within DR=0.40 cone
      VarHandle< std::vector<float,std::allocator<float> >* > Etcone40_pt_corrected;
      /// [detail 0]
      VarHandle< std::vector<float,std::allocator<float> >* > Etcone45;
      /// [detail 9]
      VarHandle< std::vector<float,std::allocator<float> >* > Ethad;
      /// [detail 8]
      VarHandle< std::vector<float,std::allocator<float> >* > Ethad1;
      /// [detail 170]
      VarHandle< std::vector<float,std::allocator<float> >* > EtringnoisedR03sig2;
      /// [detail 171]
      VarHandle< std::vector<float,std::allocator<float> >* > EtringnoisedR03sig3;
      /// [detail 172]
      VarHandle< std::vector<float,std::allocator<float> >* > EtringnoisedR03sig4;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_HPV_eta] 
      VarHandle< std::vector<float,std::allocator<float> >* > HPV_eta;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_HPV_sigma_eta] 
      VarHandle< std::vector<float,std::allocator<float> >* > HPV_sigma_eta;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_HPV_sigma_zvertex] 
      VarHandle< std::vector<float,std::allocator<float> >* > HPV_sigma_zvertex;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_HPV_zvertex] 
      VarHandle< std::vector<float,std::allocator<float> >* > HPV_zvertex;
      VarHandle< std::vector<double,std::allocator<double> >* > Hmatrix;
      VarHandle< std::vector<double,std::allocator<double> >* > Hmatrix5;
      VarHandle< std::vector<unsigned int,std::allocator<unsigned int> >* > OQ;
      VarHandle< std::vector<float,std::allocator<float> >* > Rconv;
      VarHandle< std::vector<float,std::allocator<float> >* > TRTHighTHitsRatio;
      VarHandle< std::vector<float,std::allocator<float> >* > TRTHighTOutliersRatio;
      VarHandle< std::vector<float,std::allocator<float> >* > Unrefittedtrack_d0;
      VarHandle< std::vector<float,std::allocator<float> >* > Unrefittedtrack_eta;
      VarHandle< std::vector<float,std::allocator<float> >* > Unrefittedtrack_phi;
      VarHandle< std::vector<float,std::allocator<float> >* > Unrefittedtrack_pt;
      VarHandle< std::vector<float,std::allocator<float> >* > Unrefittedtrack_qoverp;
      VarHandle< std::vector<float,std::allocator<float> >* > Unrefittedtrack_theta;
      VarHandle< std::vector<float,std::allocator<float> >* > Unrefittedtrack_z0;
      VarHandle< std::vector<double,std::allocator<double> >* > adaboost;
      VarHandle< std::vector<int,std::allocator<int> >* > author;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_calibHitsShowerDepth] Shower depth as defined by the calib hits cluster correction
      VarHandle< std::vector<float,std::allocator<float> >* > calibHitsShowerDepth;
      VarHandle< std::vector<float,std::allocator<float> >* > cellmaxfrac;
      VarHandle< std::vector<float,std::allocator<float> >* > centerlambda;
      VarHandle< std::vector<float,std::allocator<float> >* > charge;
      VarHandle< std::vector<float,std::allocator<float> >* > cl_E;
      VarHandle< std::vector<float,std::allocator<float> >* > cl_eta;
      VarHandle< std::vector<float,std::allocator<float> >* > cl_phi;
      VarHandle< std::vector<float,std::allocator<float> >* > cl_pt;
      /// Number of tracks for the first conversion candidate; 0 if no conversion or if there are more than two tracks.
      VarHandle< std::vector<int,std::allocator<int> >* > convFlag;
      /// [detail 72]
      VarHandle< std::vector<float,std::allocator<float> >* > convanglematch;
      /// [detail 71]
      VarHandle< std::vector<float,std::allocator<float> >* > convtrackmatch;
      VarHandle< std::vector<int,std::allocator<int> >* > convtrk1nBLHits;
      VarHandle< std::vector<int,std::allocator<int> >* > convtrk1nPixHits;
      VarHandle< std::vector<int,std::allocator<int> >* > convtrk1nSCTHits;
      VarHandle< std::vector<int,std::allocator<int> >* > convtrk1nTRTHits;
      VarHandle< std::vector<int,std::allocator<int> >* > convtrk2nBLHits;
      VarHandle< std::vector<int,std::allocator<int> >* > convtrk2nPixHits;
      VarHandle< std::vector<int,std::allocator<int> >* > convtrk2nSCTHits;
      VarHandle< std::vector<int,std::allocator<int> >* > convtrk2nTRTHits;
      VarHandle< std::vector<float,std::allocator<float> >* > convvtxchi2;
      VarHandle< std::vector<float,std::allocator<float> >* > convvtxx;
      VarHandle< std::vector<float,std::allocator<float> >* > convvtxy;
      VarHandle< std::vector<float,std::allocator<float> >* > convvtxz;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_deltaEmax2] 
      VarHandle< std::vector<float,std::allocator<float> >* > deltaEmax2;
      VarHandle< std::vector<float,std::allocator<float> >* > deltaEs;
      /// [detail 305]Difference between the cluster phi (sampling 2) and the eta of the track extrapolated from the last measurement
      VarHandle< std::vector<float,std::allocator<float> >* > deltaPhiFromLast;
      /// [detail 284]Difference between the track phi at perigee and the phi at which the track crosses the calorimeter
      VarHandle< std::vector<float,std::allocator<float> >* > deltaPhiRot;
      /// [detail 45]
      VarHandle< std::vector<float,std::allocator<float> >* > deltaeta1;
      /// [detail 46]
      VarHandle< std::vector<float,std::allocator<float> >* > deltaeta2;
      /// [detail 50]
      VarHandle< std::vector<float,std::allocator<float> >* > deltaphi2;
      /// [detail 247]
      VarHandle< std::vector<float,std::allocator<float> >* > deltaphiRescaled;
      /// [detail 76]
      VarHandle< std::vector<float,std::allocator<float> >* > depth;
      /// TrackSummary::getPID(eProbabilityBrem)
      VarHandle< std::vector<float,std::allocator<float> >* > eProbabilityBrem;
      /// TrackSummary::getPID(eProbabilityComb)
      VarHandle< std::vector<float,std::allocator<float> >* > eProbabilityComb;
      /// TrackSummary::getPID(eProbabilityHT)
      VarHandle< std::vector<float,std::allocator<float> >* > eProbabilityHT;
      /// TrackSummary::getPID(eProbabilityToT)
      VarHandle< std::vector<float,std::allocator<float> >* > eProbabilityToT;
      VarHandle< std::vector<double,std::allocator<double> >* > electronbgweight;
      VarHandle< std::vector<double,std::allocator<double> >* > electronweight;
      /// [detail 39]
      VarHandle< std::vector<float,std::allocator<float> >* > emaxs1;
      /// [detail 74]
      VarHandle< std::vector<float,std::allocator<float> >* > errz;
      VarHandle< std::vector<float,std::allocator<float> >* > eta;
      /// [detail 248]Eta position at sampling 1 for track extrapolated from the last hit.
      VarHandle< std::vector<float,std::allocator<float> >* > etaSampling1;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_etacellS0] 
      VarHandle< std::vector<float,std::allocator<float> >* > etacellS0;
      /// [detail 42]
      VarHandle< std::vector<float,std::allocator<float> >* > etacorrmag;
      /// [detail 75]
      VarHandle< std::vector<float,std::allocator<float> >* > etap;
      VarHandle< std::vector<float,std::allocator<float> >* > etas0;
      VarHandle< std::vector<float,std::allocator<float> >* > etas1;
      VarHandle< std::vector<float,std::allocator<float> >* > etas2;
      VarHandle< std::vector<float,std::allocator<float> >* > etas3;
      VarHandle< std::vector<int,std::allocator<int> >* > expectBLayerHit;
      /// [detail 288]Do we expect to see a hit from this track in the B pixel layer?
      VarHandle< std::vector<float,std::allocator<float> >* > expectHitInBLayer;
      /// [detail 11]
      VarHandle< std::vector<float,std::allocator<float> >* > f1;
      /// [detail 13]
      VarHandle< std::vector<float,std::allocator<float> >* > f1core;
      /// [detail 12]
      VarHandle< std::vector<float,std::allocator<float> >* > f3;
      /// [detail 14]
      VarHandle< std::vector<float,std::allocator<float> >* > f3core;
      VarHandle< std::vector<float,std::allocator<float> >* > firstEdens;
      /// [detail 28]
      VarHandle< std::vector<float,std::allocator<float> >* > fside;
      VarHandle< std::vector<int,std::allocator<int> >* > goodOQ;
      VarHandle< std::vector<int,std::allocator<int> >* > hasconv;
      VarHandle< std::vector<int,std::allocator<int> >* > hastrack;
      /// True if the first conversion candidate has 1 or 2 tracks.
      VarHandle< std::vector<int,std::allocator<int> >* > isConv;
      /// IsEM mask --- bits are set for each cut that FAILS.
      VarHandle< std::vector<unsigned int,std::allocator<unsigned int> >* > isEM;
      /// Loose IsEM mask --- bits are set for each cut that FAILS.
      VarHandle< std::vector<unsigned int,std::allocator<unsigned int> >* > isEMLoose;
      /// Medium IsEM mask --- bits are set for each cut that FAILS.
      VarHandle< std::vector<unsigned int,std::allocator<unsigned int> >* > isEMMedium;
      /// Tight IsEM mask --- bits are set for each cut that FAILS.
      VarHandle< std::vector<unsigned int,std::allocator<unsigned int> >* > isEMTight;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_isIso] Mask of isolation cuts that this object fails.  Bits are defined in egammaInterfaces/egammaIsolationMVATopToolsDefs.h or, from python, in ROOT.egammaIsolationType (in egammaInterfacesEnumsDict).
      VarHandle< std::vector<unsigned int,std::allocator<unsigned int> >* > isIso;
      VarHandle< std::vector<double,std::allocator<double> >* > isolationlikelihoodhqelectrons;
      VarHandle< std::vector<double,std::allocator<double> >* > isolationlikelihoodjets;
      VarHandle< std::vector<float,std::allocator<float> >* > jet_E;
      VarHandle< std::vector<float,std::allocator<float> >* > jet_dr;
      VarHandle< std::vector<float,std::allocator<float> >* > jet_eta;
      VarHandle< std::vector<float,std::allocator<float> >* > jet_m;
      VarHandle< std::vector<int,std::allocator<int> >* > jet_matched;
      VarHandle< std::vector<float,std::allocator<float> >* > jet_phi;
      VarHandle< std::vector<float,std::allocator<float> >* > jet_pt;
      VarHandle< std::vector<float,std::allocator<float> >* > jet_truth_E;
      VarHandle< std::vector<float,std::allocator<float> >* > jet_truth_dr;
      VarHandle< std::vector<float,std::allocator<float> >* > jet_truth_eta;
      VarHandle< std::vector<float,std::allocator<float> >* > jet_truth_m;
      VarHandle< std::vector<int,std::allocator<int> >* > jet_truth_matched;
      VarHandle< std::vector<float,std::allocator<float> >* > jet_truth_phi;
      VarHandle< std::vector<float,std::allocator<float> >* > jet_truth_pt;
      VarHandle< std::vector<float,std::allocator<float> >* > lateral;
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > likelihoodsPixeldEdx;
      VarHandle< std::vector<float,std::allocator<float> >* > longitudinal;
      VarHandle< std::vector<int,std::allocator<int> >* > loose;
      VarHandle< std::vector<int,std::allocator<int> >* > looseIso;
      VarHandle< std::vector<int,std::allocator<int> >* > loosePP;
      VarHandle< std::vector<int,std::allocator<int> >* > loosePPIso;
      VarHandle< std::vector<float,std::allocator<float> >* > m;
      VarHandle< std::vector<float,std::allocator<float> >* > massPixeldEdx;
      VarHandle< std::vector<int,std::allocator<int> >* > medium;
      VarHandle< std::vector<int,std::allocator<int> >* > mediumIso;
      VarHandle< std::vector<int,std::allocator<int> >* > mediumIsoWithoutTrack;
      VarHandle< std::vector<int,std::allocator<int> >* > mediumPP;
      VarHandle< std::vector<int,std::allocator<int> >* > mediumPPIso;
      VarHandle< std::vector<int,std::allocator<int> >* > mediumWithoutTrack;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_mvaptcone20] Sum of track transverse momenta within a cone of radius 0.2, as calculated by the egammaIsolationMVATopTool.
      VarHandle< std::vector<float,std::allocator<float> >* > mvaptcone20;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_mvaptcone30] Sum of track transverse momenta within a cone of radius 0.3, as calculated by the egammaIsolationMVATopTool.
      VarHandle< std::vector<float,std::allocator<float> >* > mvaptcone30;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_mvaptcone40] Sum of track transverse momenta within a cone of radius 0.4, as calculated by the egammaIsolationMVATopTool.
      VarHandle< std::vector<float,std::allocator<float> >* > mvaptcone40;
      /// Number of ntuple rows.
      VarHandle< int > n;
      VarHandle< std::vector<int,std::allocator<int> >* > nBLHits;
      VarHandle< std::vector<int,std::allocator<int> >* > nBLSharedHits;
      VarHandle< std::vector<int,std::allocator<int> >* > nBLayerOutliers;
      VarHandle< std::vector<int,std::allocator<int> >* > nBLayerSplitHits;
      VarHandle< std::vector<int,std::allocator<int> >* > nContribPixelLayers;
      /// Number of conversion vertices.
      VarHandle< std::vector<int,std::allocator<int> >* > nConv;
      /// Number of conversion vertices with exactly two tracks.
      VarHandle< std::vector<int,std::allocator<int> >* > nDoubleTrackConv;
      VarHandle< std::vector<int,std::allocator<int> >* > nGangedFlaggedFakes;
      VarHandle< std::vector<int,std::allocator<int> >* > nGangedPixels;
      VarHandle< std::vector<int,std::allocator<int> >* > nGoodHitsPixeldEdx;
      VarHandle< std::vector<int,std::allocator<int> >* > nPixHits;
      VarHandle< std::vector<int,std::allocator<int> >* > nPixHoles;
      VarHandle< std::vector<int,std::allocator<int> >* > nPixSharedHits;
      VarHandle< std::vector<int,std::allocator<int> >* > nPixSplitHits;
      VarHandle< std::vector<int,std::allocator<int> >* > nPixelDeadSensors;
      VarHandle< std::vector<int,std::allocator<int> >* > nPixelOutliers;
      VarHandle< std::vector<int,std::allocator<int> >* > nPixelSpoiltHits;
      VarHandle< std::vector<int,std::allocator<int> >* > nSCTDeadSensors;
      VarHandle< std::vector<int,std::allocator<int> >* > nSCTDoubleHoles;
      VarHandle< std::vector<int,std::allocator<int> >* > nSCTHits;
      VarHandle< std::vector<int,std::allocator<int> >* > nSCTHoles;
      VarHandle< std::vector<int,std::allocator<int> >* > nSCTOutliers;
      VarHandle< std::vector<int,std::allocator<int> >* > nSCTSharedHits;
      VarHandle< std::vector<int,std::allocator<int> >* > nSCTSpoiltHits;
      VarHandle< std::vector<int,std::allocator<int> >* > nSiHits;
      /// Number of conversion vertices with exactly one track.
      VarHandle< std::vector<int,std::allocator<int> >* > nSingleTrackConv;
      VarHandle< std::vector<int,std::allocator<int> >* > nTRTHighTHits;
      VarHandle< std::vector<int,std::allocator<int> >* > nTRTHighTOutliers;
      VarHandle< std::vector<int,std::allocator<int> >* > nTRTHits;
      VarHandle< std::vector<int,std::allocator<int> >* > nTRTHoles;
      VarHandle< std::vector<int,std::allocator<int> >* > nTRTOutliers;
      VarHandle< std::vector<double,std::allocator<double> >* > neuralnet;
      /// [detail 295]
      VarHandle< std::vector<float,std::allocator<float> >* > nucone20;
      /// [detail 296]
      VarHandle< std::vector<float,std::allocator<float> >* > nucone30;
      /// [detail 297]
      VarHandle< std::vector<float,std::allocator<float> >* > nucone40;
      /// MC particle origin, from classifier tool.
      VarHandle< std::vector<int,std::allocator<int> >* > origin;
      /// Origin of photon for background electron from conversions, from classifier tool.
      VarHandle< std::vector<int,std::allocator<int> >* > originbkg;
      VarHandle< std::vector<float,std::allocator<float> >* > phi;
      VarHandle< std::vector<float,std::allocator<float> >* > phis0;
      VarHandle< std::vector<float,std::allocator<float> >* > phis1;
      VarHandle< std::vector<float,std::allocator<float> >* > phis2;
      VarHandle< std::vector<float,std::allocator<float> >* > phis3;
      VarHandle< std::vector<float,std::allocator<float> >* > pixeldEdx;
      /// [detail 35]
      VarHandle< std::vector<float,std::allocator<float> >* > pos7;
      VarHandle< std::vector<float,std::allocator<float> >* > pt;
      VarHandle< std::vector<float,std::allocator<float> >* > pt1conv;
      VarHandle< std::vector<float,std::allocator<float> >* > pt2conv;
      /// [detail 293]
      VarHandle< std::vector<float,std::allocator<float> >* > ptcone20;
      /// [detail 241]
      VarHandle< std::vector<float,std::allocator<float> >* > ptcone30;
      /// [detail 294]
      VarHandle< std::vector<float,std::allocator<float> >* > ptcone40;
      VarHandle< std::vector<float,std::allocator<float> >* > ptconv;
      VarHandle< std::vector<float,std::allocator<float> >* > px;
      VarHandle< std::vector<float,std::allocator<float> >* > py;
      VarHandle< std::vector<float,std::allocator<float> >* > pz;
      VarHandle< std::vector<float,std::allocator<float> >* > pzconv;
      VarHandle< std::vector<float,std::allocator<float> >* > rawcl_E;
      VarHandle< std::vector<float,std::allocator<float> >* > rawcl_Es0;
      VarHandle< std::vector<float,std::allocator<float> >* > rawcl_Es1;
      VarHandle< std::vector<float,std::allocator<float> >* > rawcl_Es2;
      VarHandle< std::vector<float,std::allocator<float> >* > rawcl_Es3;
      VarHandle< std::vector<float,std::allocator<float> >* > rawcl_eta;
      VarHandle< std::vector<float,std::allocator<float> >* > rawcl_etas0;
      VarHandle< std::vector<float,std::allocator<float> >* > rawcl_etas1;
      VarHandle< std::vector<float,std::allocator<float> >* > rawcl_etas2;
      VarHandle< std::vector<float,std::allocator<float> >* > rawcl_etas3;
      VarHandle< std::vector<float,std::allocator<float> >* > rawcl_phi;
      VarHandle< std::vector<float,std::allocator<float> >* > rawcl_phis0;
      VarHandle< std::vector<float,std::allocator<float> >* > rawcl_phis1;
      VarHandle< std::vector<float,std::allocator<float> >* > rawcl_phis2;
      VarHandle< std::vector<float,std::allocator<float> >* > rawcl_phis3;
      VarHandle< std::vector<float,std::allocator<float> >* > rawcl_pt;
     VarHandle< std::vector<double,std::allocator<double> >* > cl_etaCalo;
     VarHandle< std::vector<double,std::allocator<double> >* > cl_phiCalo;
      /// [detail 103]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_LMqoverp;
      /// [detail 108]
      VarHandle< std::vector<std::vector<int,std::allocator<int> >,std::allocator<std::vector<int,std::allocator<int> > > >* > refittedTrack_author;
      /// [detail 68]
      VarHandle< std::vector<std::vector<int,std::allocator<int> >,std::allocator<std::vector<int,std::allocator<int> > > >* > refittedTrack_bremFitStatus;
      /// [detail 61]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_bremRadius;
      /// [detail 67]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_bremRadiusErr;
      /// [detail 105]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_bremZ;
      /// [detail 106]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_bremZErr;
      /// [detail 70]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_chi2;
      /// [detail 84]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_covd0;
      /// [detail 86]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_covd0phi;
      /// [detail 88]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_covd0qoverp;
      /// [detail 87]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_covd0theta;
      /// [detail 85]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_covd0z0;
      /// [detail 93]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_covphi;
      /// [detail 95]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_covphiqoverp;
      /// [detail 94]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_covphitheta;
      /// [detail 98]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_covqoverp;
      /// [detail 96]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_covtheta;
      /// [detail 97]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_covthetaqoverp;
      /// [detail 89]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_covz0;
      /// [detail 90]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_covz0phi;
      /// [detail 92]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_covz0qoverp;
      /// [detail 91]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_covz0theta;
      /// [detail 79]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_d0;
      /// [detail 104]
      VarHandle< std::vector<std::vector<int,std::allocator<int> >,std::allocator<std::vector<int,std::allocator<int> > > >* > refittedTrack_hasBrem;
      /// Number of ntuple rows.
      VarHandle< std::vector<int,std::allocator<int> >* > refittedTrack_n;
      /// [detail 80]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_phi;
      /// [detail 81]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_qoverp;
      /// [detail 83]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_theta;
      /// [detail 82]
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > refittedTrack_z0;
      VarHandle< std::vector<float,std::allocator<float> >* > reta;
      VarHandle< std::vector<double,std::allocator<double> >* > ringernn;
      VarHandle< std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >* > rings_E;
      VarHandle< std::vector<float,std::allocator<float> >* > rphi;
      /// [detail 40]
      VarHandle< std::vector<float,std::allocator<float> >* > rphiallcalo;
      VarHandle< std::vector<float,std::allocator<float> >* > secondR;
      VarHandle< std::vector<float,std::allocator<float> >* > secondlambda;
      VarHandle< std::vector<double,std::allocator<double> >* > softebgweight;
      VarHandle< std::vector<double,std::allocator<double> >* > softeneuralnet;
      VarHandle< std::vector<double,std::allocator<double> >* > softeweight;
      VarHandle< std::vector<int,std::allocator<int> >* > tight;
      VarHandle< std::vector<int,std::allocator<int> >* > tightIso;
      VarHandle< std::vector<int,std::allocator<int> >* > tightIsoWithoutTrack;
      VarHandle< std::vector<int,std::allocator<int> >* > tightPP;
      VarHandle< std::vector<int,std::allocator<int> >* > tightPPIso;
      VarHandle< std::vector<int,std::allocator<int> >* > tightWithoutTrack;
      /// [detail 306]
      VarHandle< std::vector<float,std::allocator<float> >* > topoEtcone20;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_topoEtcone20_corrected] 
      VarHandle< std::vector<float,std::allocator<float> >* > topoEtcone20_corrected;
      /// [detail 307]
      VarHandle< std::vector<float,std::allocator<float> >* > topoEtcone30;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_topoEtcone30_corrected] 
      VarHandle< std::vector<float,std::allocator<float> >* > topoEtcone30_corrected;
      /// [detail 308]
      VarHandle< std::vector<float,std::allocator<float> >* > topoEtcone40;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_topoEtcone40_corrected] 
      VarHandle< std::vector<float,std::allocator<float> >* > topoEtcone40_corrected;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_topoEtcone60] 
      VarHandle< std::vector<float,std::allocator<float> >* > topoEtcone60;
      VarHandle< std::vector<float,std::allocator<float> >* > trackIPEstimate_d0_biasedpvunbiased;
      VarHandle< std::vector<float,std::allocator<float> >* > trackIPEstimate_d0_unbiasedpvunbiased;
      VarHandle< std::vector<float,std::allocator<float> >* > trackIPEstimate_sigd0_biasedpvunbiased;
      VarHandle< std::vector<float,std::allocator<float> >* > trackIPEstimate_sigd0_unbiasedpvunbiased;
      VarHandle< std::vector<float,std::allocator<float> >* > trackIPEstimate_sigz0_biasedpvunbiased;
      VarHandle< std::vector<float,std::allocator<float> >* > trackIPEstimate_sigz0_unbiasedpvunbiased;
      VarHandle< std::vector<float,std::allocator<float> >* > trackIPEstimate_z0_biasedpvunbiased;
      VarHandle< std::vector<float,std::allocator<float> >* > trackIPEstimate_z0_unbiasedpvunbiased;
      VarHandle< std::vector<float,std::allocator<float> >* > trackcov_d0;
      VarHandle< std::vector<float,std::allocator<float> >* > trackcov_d0_phi;
      VarHandle< std::vector<float,std::allocator<float> >* > trackcov_d0_qoverp;
      VarHandle< std::vector<float,std::allocator<float> >* > trackcov_d0_theta;
      VarHandle< std::vector<float,std::allocator<float> >* > trackcov_d0_z0;
      VarHandle< std::vector<float,std::allocator<float> >* > trackcov_phi;
      VarHandle< std::vector<float,std::allocator<float> >* > trackcov_phi_qoverp;
      VarHandle< std::vector<float,std::allocator<float> >* > trackcov_phi_theta;
      VarHandle< std::vector<float,std::allocator<float> >* > trackcov_qoverp;
      VarHandle< std::vector<float,std::allocator<float> >* > trackcov_theta;
      VarHandle< std::vector<float,std::allocator<float> >* > trackcov_theta_qoverp;
      VarHandle< std::vector<float,std::allocator<float> >* > trackcov_z0;
      VarHandle< std::vector<float,std::allocator<float> >* > trackcov_z0_phi;
      VarHandle< std::vector<float,std::allocator<float> >* > trackcov_z0_qoverp;
      VarHandle< std::vector<float,std::allocator<float> >* > trackcov_z0_theta;
      VarHandle< std::vector<float,std::allocator<float> >* > trackd0;
      /// [detail 274]Transverse impact parameter with respect to the beam spot.
      VarHandle< std::vector<float,std::allocator<float> >* > trackd0_physics;
      VarHandle< std::vector<float,std::allocator<float> >* > trackd0beam;
      VarHandle< std::vector<float,std::allocator<float> >* > trackd0pv;
      VarHandle< std::vector<float,std::allocator<float> >* > trackd0pvunbiased;
      VarHandle< std::vector<float,std::allocator<float> >* > tracketa;
      VarHandle< std::vector<float,std::allocator<float> >* > trackfitchi2;
      VarHandle< std::vector<int,std::allocator<int> >* > trackfitndof;
      VarHandle< std::vector<float,std::allocator<float> >* > trackphi;
      VarHandle< std::vector<float,std::allocator<float> >* > trackpt;
      VarHandle< std::vector<float,std::allocator<float> >* > trackqoverp;
      /// Uncertainty on transverse impact parameter.
      VarHandle< std::vector<float,std::allocator<float> >* > tracksigd0beam;
      /// Uncertainty on transverse impact parameter.
      VarHandle< std::vector<float,std::allocator<float> >* > tracksigd0pv;
      VarHandle< std::vector<float,std::allocator<float> >* > tracksigd0pvunbiased;
      /// Uncertainty on longitudinal impact parameter.
      VarHandle< std::vector<float,std::allocator<float> >* > tracksigz0beam;
      /// Uncertainty on longitudinal impact parameter.
      VarHandle< std::vector<float,std::allocator<float> >* > tracksigz0pv;
      VarHandle< std::vector<float,std::allocator<float> >* > tracksigz0pvunbiased;
      VarHandle< std::vector<float,std::allocator<float> >* > tracktheta;
      VarHandle< std::vector<float,std::allocator<float> >* > trackz0;
      VarHandle< std::vector<float,std::allocator<float> >* > trackz0beam;
      VarHandle< std::vector<float,std::allocator<float> >* > trackz0pv;
      VarHandle< std::vector<float,std::allocator<float> >* > trackz0pvunbiased;
      VarHandle< std::vector<float,std::allocator<float> >* > truth_E;
      VarHandle< std::vector<int,std::allocator<int> >* > truth_barcode;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_truth_bremLoc] 
      VarHandle< std::vector<float,std::allocator<float> >* > truth_bremLoc;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_truth_bremSi] 
      VarHandle< std::vector<float,std::allocator<float> >* > truth_bremSi;
      VarHandle< std::vector<float,std::allocator<float> >* > truth_eta;
      VarHandle< std::vector<int,std::allocator<int> >* > truth_hasHardBrem;
      /// Index in mc_
      VarHandle< std::vector<int,std::allocator<int> >* > truth_index;
      VarHandle< std::vector<int,std::allocator<int> >* > truth_matched;
      VarHandle< std::vector<int,std::allocator<int> >* > truth_motherbarcode;
      VarHandle< std::vector<int,std::allocator<int> >* > truth_mothertype;
      VarHandle< std::vector<float,std::allocator<float> >* > truth_phi;
      VarHandle< std::vector<float,std::allocator<float> >* > truth_pt;
      VarHandle< std::vector<int,std::allocator<int> >* > truth_status;
      /// [UserData: egammaD3PDAnalysis::_ElectronAODCollection_truth_sumbrem] 
      VarHandle< std::vector<float,std::allocator<float> >* > truth_sumbrem;
      VarHandle< std::vector<int,std::allocator<int> >* > truth_type;
      /// MC particle type, from classifier tool.
      VarHandle< std::vector<int,std::allocator<int> >* > type;
      /// Type of photon for background electron from conversions, from classifier tool
      VarHandle< std::vector<int,std::allocator<int> >* > typebkg;
      VarHandle< std::vector<float,std::allocator<float> >* > vertweight;
      VarHandle< std::vector<float,std::allocator<float> >* > vertx;
      VarHandle< std::vector<float,std::allocator<float> >* > verty;
      VarHandle< std::vector<float,std::allocator<float> >* > vertz;
      /// [detail 25]
      VarHandle< std::vector<float,std::allocator<float> >* > weta2;
      /// [detail 24]
      VarHandle< std::vector<float,std::allocator<float> >* > ws3;
      /// [detail 37]
      VarHandle< std::vector<float,std::allocator<float> >* > wstot;
      VarHandle< std::vector<float,std::allocator<float> >* > zconv;
      /// [detail 73]
      VarHandle< std::vector<float,std::allocator<float> >* > zvertex;

   private:
      mutable std::vector< ElectronD3PDObjectElement* > fProxies; ///< Internal list of proxy objects
      std::map< ::TString, VarHandleBase* > fHandles; ///< Book-keeper of the VarHandle members
      const ::Bool_t fFromInput; ///< Flag specifying if object is used for D3PD reading
      ::TString fPrefix; ///< Prefix to the branch names

      ClassDef( ElectronD3PDObject, 0 )

   }; // class ElectronD3PDObject

} // namespace D3PDReader

#endif // D3PDREADER_ElectronD3PDObject_H
