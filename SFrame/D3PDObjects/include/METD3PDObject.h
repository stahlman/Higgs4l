// Dear emacs, this is -*- c++ -*-
// -------------------------------------------------------------
//             Code produced by D3PDMakerReader
//
//  author: Attila Krasznahorkay <Attila.Krasznahorkay@cern.ch>
// -------------------------------------------------------------
#ifndef D3PDREADER_METD3PDObject_H
#define D3PDREADER_METD3PDObject_H

#include <map>

#include <TObject.h>
#include <TString.h>

#include "D3PDObjectBase.h"
#include "D3PDReadStats.h"
#include "VarHandle.h"

class TTree;

namespace D3PDReader {

   /**
    * Code generated by CodeGenerator_v2 on:
    *  host = pc-penn-d-01
    *  OS   = Linux / 2.6.18-308.8.2.el5
    *  user = stahlman
    *  time = Fri Jun 29 14:28:44 2012
    */
   class METD3PDObject : public D3PDObjectBase {

   public:
      /// Constructor used when reading from a TTree
      METD3PDObject( const ::Long64_t& master, const char* prefix = "MET_RefFinal_" );
      /// Constructor when the object is only used for writing data out
      METD3PDObject( const char* prefix = "MET_RefFinal_" );

      /// Get the currently configured prefix value
      virtual const char* GetPrefix() const;
      /// Set the prefix for the variables
      virtual void SetPrefix( const char* prefix );

      /// Connect the object to an input TTree
      virtual void ReadFrom( ::TTree* tree );
      /// Connect the object to an output TTree
      virtual void WriteTo( ::TTree* tree );

      /// Turn (selected) branches either on or off
      virtual void SetActive( ::Bool_t active = kTRUE,
                              const ::TString& pattern = ".*" );
      /// Read in all the variables that we need to write out as well
      virtual void ReadAllActive();

      /// Get the D3PD reading statistics
      virtual D3PDReadStats GetStatistics() const;

      /// Set the contents of the object according to another object
      METD3PDObject& Set( const METD3PDObject& parent );

      VarHandle< float > et;
     //VarHandle< float > etx;
      VarHandle< float > etx_CentralReg;
      VarHandle< float > etx_EndcapRegion;
      VarHandle< float > etx_ForwardReg;
     //VarHandle< float > ety;
      VarHandle< float > ety_CentralReg;
      VarHandle< float > ety_EndcapRegion;
      VarHandle< float > ety_ForwardReg;
      VarHandle< float > phi;
      VarHandle< float > phi_CentralReg;
      VarHandle< float > phi_EndcapRegion;
      VarHandle< float > phi_ForwardReg;
      VarHandle< float > sumet;
      VarHandle< float > sumet_CentralReg;
      VarHandle< float > sumet_EndcapRegion;
      VarHandle< float > sumet_ForwardReg;

   private:
      std::map< ::TString, VarHandleBase* > fHandles; ///< Book-keeper of the VarHandle members
      const ::Bool_t fFromInput; ///< Flag specifying if object is used for D3PD reading
      ::TString fPrefix; ///< Prefix to the branch names

      ClassDef( METD3PDObject, 0 )

   }; // class METD3PDObject

} // namespace D3PDReader

#endif // D3PDREADER_METD3PDObject_H
